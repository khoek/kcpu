name: CI

on: [push, pull_request]

jobs:
  ci:
    name: Build ${{ matrix.rust }}/${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        rust: [stable, beta, nightly]
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true

      - name: Build crate
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --all-features

      - name: Build target archive (windows)
        if: runner.os == 'Windows'
        run: tar -C target\\release -czf kcpu-rust-${{ matrix.rust }}-target-${{ matrix.os }}.tar.gz libkcpu.rlib kcpu.exe kasm.exe kcpu-vm.exe

      - name: Build target archive (non-windows)
        if: runner.os != 'Windows'
        run: tar -C target/release -czf kcpu-rust-${{ matrix.rust }}-target-${{ matrix.os }}.tar.gz libkcpu.rlib kcpu kasm kcpu-vm

      - name: Upload target archive
        uses: actions/upload-artifact@v2
        with:
          name: kcpu-rust-${{ matrix.rust }}-target-${{ matrix.os }}
          path: kcpu-rust-${{ matrix.rust }}-target-${{ matrix.os }}.tar.gz

      - name: Test crate
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --release --all-features
